# Test a realistic workflow including msgpack encoding and decoding
# and connect both the pass and the overflow output to the
# blackhole to acount for the data
---
onramp:
  - id: blaster
    type: blaster
    codec: msgpack
    config:
      base64: true
      source: ./demo/data/data.msgpack.xz

offramp:
  - id: blackhole
    type: blackhole
    codec: msgpack
    config:
      warmup_secs: 10
      stop_after_secs: 40
      significant_figures: 2


binding:
  - id: bench
    links:
      '/onramp/blaster/{instance}/out': [ '/pipeline/main/{instance}/in' ]
      '/pipeline/main/{instance}/out': [ '/offramp/blackhole/{instance}/in' ]

pipeline:
  - id: main
    interface:
      inputs:
        - in
      outputs:
        - out
    nodes:
      - id: runtime
        op: runtime::tremor
        config:
          script: |
            export class, dimension, rate, index_type;

            _ { $index_type := index; }

            application="app1" { $class := "applog_app1"; $rate := 1250;  $dimension := application; return; }
            application="app2" { $class := "applog_app2"; $rate := 2500;  $dimension := application; return; }
            application="app3" { $class := "applog_app3"; $rate := 18750; $dimension := application; return; }
            application="app4" { $class := "applog_app4"; $rate := 750;   $dimension := application; return;}
            application="app5" { $class := "applog_app5"; $rate := 18750; $dimension := application; return; }

            index_type="applog_app6" { $class := "applog_app6"; $rate := 4500; $dimension := logger_name; return; }

            index_type="syslog_app1" { $class := "syslog_app1"; $rate := 2500; $dimension := syslog_hostname; return; }
            tags:"tag1"              { $class := "syslog_app2"; $rate := 125;  $dimension := syslog_hostname; return; }
            index_type="syslog_app3" { $class := "syslog_app3"; $rate := 1750; $dimension := syslog_hostname; return; }
            index_type="syslog_app4" { $class := "syslog_app4"; $rate := 7500; $dimension := syslog_hostname; return; }
            index_type="syslog_app5" { $class := "syslog_app5"; $rate := 125;  $dimension := syslog_hostname; return; }
            index_type="syslog_app6" { $class := "syslog_app6"; $rate := 3750; $dimension := syslog_hostname; return; }

            _ { $class := "default"; $rate := 250; }
      - id: group
        op: grouper::bucket
    links:
      in: [ runtime ]
      runtime: [ group ]
      group: [ out ]
      group/overflow: [ out ]
