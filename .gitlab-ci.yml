test:
  stage: test
  image: wayfair/tremor/ci:1.36.0c
  when: always
  tags:
    - docker
  script:
    - source $HOME/.cargo/env
    - export CARGO_HOME=.cargo
    - source /opt/rh/devtoolset-8/enable
    - cargo test --all-features --all
    - cargo clippy --all-features --all
    - make it


meta-checks:
  stage: test
  image: wayfair/tremor/ci:1.36.0c
  when: always
  tags:
    - docker
  script:
    - make chk_copyright_ci
    - make chk_unwrap_ci
    - source $HOME/.cargo/env
    - export CARGO_HOME=.cargo
    - source /opt/rh/devtoolset-8/enable
    - cargo install cargo-deny
    - cargo deny check

api-tests:
  stage: test
  image: wayfair/tremor/ci:1.36.0c
  when: always
  # cache:
  #   paths:
  #     - target
  #     - .cargo
  tags:
    - docker
  script:
    - source $HOME/.cargo/env
    - export CARGO_HOME=.cargo
    - source /opt/rh/devtoolset-8/enable
    # we need to translate the api yaml
    - ~/go/bin/yaml2json < static/openapi.yaml > static/openapi.json
    - cargo build -p tremor-server -p tremor-tool
    # Test API via EQC
    - target/debug/tremor-server &
    - sleep 1
    - pgrep tremor
    - cd tremor-erl
    - erl -noshell -eval "eqc:registration(\"${EQC_LICENSE}\")" -eval "eqc:start()" -eval "init:stop()"
    - rebar3 as eqc eqc
    - cd ..
    - pkill tremor-server
    # Test API via curl
    - target/debug/tremor-server &
    - sleep 1
    - pgrep tremor
    - cd tremor-api
    - ~/go/bin/coyote -c tests/coyote.yml
    - cd ..
    - pkill tremor-server
    #  test API via tremor tool
    - target/debug/tremor-server &
    - sleep 1
    - pgrep tremor
    - cd tremor-tool
    - ~/go/bin/coyote -c tests/coyote.yml
    - cd ..
    - pkill tremor-server

script-tests:
  stage: test
  image: wayfair/tremor/ci:1.36.0c
  when: always
  # cache:
  #   paths:
  #     - target
  #     - .cargo
  tags:
    - docker
  script:
    - source $HOME/.cargo/env
    - export CARGO_HOME=.cargo
    - source /opt/rh/devtoolset-8/enable
    # Test tremor-script
    - cd tremor-script
    - cargo build
    - erl -noshell -eval "eqc:registration(\"${EQC_LICENSE}\")" -eval "eqc:start()" -eval "init:stop()"
    - ls ../target/debug
    - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:../target/debug" rebar3 as eqc eqc

# The bench server got claimed for something else :(

# The bench server got claimed for something else :(
# doesn't make sense to run bench any more this way.
#
# bench:
#   stage: test
#   image: wayfair/tremor/dataeng-rust:1.31.1a
#   when: always
#   allow_failure: true
#   cache:
#     paths:
#       - target/
#   tags:
#     - docker
#   script: 
#     - source $HOME/.cargo/env
#     - cargo build --release
#     - cp target/release/native/php-src/libs/* /lib64
#     - make bench

# This job updates the live copy of the docs site
mkdocs:
  tags:  # this ensures it runs on the docs machine
    - docs
  script:
    - mkdocs build -d /docs/$CI_PROJECT_PATH
  only:
    - master


# This job creates/updates development copies of the site for every
# push to non-master branches
mkdocs-dev:
  tags:
    - docs
  script:
    - mkdir -p /docs/$CI_PROJECT_PATH/_dev/$CI_COMMIT_REF_NAME
    - mkdocs build -d /docs/$CI_PROJECT_PATH/_dev/$CI_COMMIT_REF_NAME
  except:
    - master

